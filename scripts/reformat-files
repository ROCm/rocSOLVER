#!/bin/bash
#
# Reformats a given list of files to match the rocSOLVER style guidelines.

files="$@"

export PATH=/opt/rocm/llvm/bin:/opt/rocm/bin:/usr/bin:/bin

# Redirect stdout to stderr.
exec >&2

# Do everything from top level
cd -- "$(git rev-parse --show-toplevel)"

[[ -z "$files" ]] && exit

# Change the copyright date at the top of any text files
for file in $files; do
    echo "Processing copyright dates in $file"
    if [[ -e $file ]]; then
        /usr/bin/perl -pi -e 'INIT { exit 1 if !-f $ARGV[0] || -B $ARGV[0]; $year = (localtime)[5] + 1900 }
            s/^([*\/#[:space:]]*)Copyright\s+(?:\(C\)\s*)?(\d+)(?:\s*-\s*\d+)?/qq($1Copyright (c) $2@{[$year != $2 ? "-$year" : ""]})/ie
            if $. < 10' "$file"
    fi
done

# Do the formatting
for file in $files; do
    if [[ -e $file ]] && echo $file | grep -Eq '\.c$|\.h$|\.hpp$|\.cpp$|\.cl$|\.in$|\.txt$|\.yaml$|\.sh$|\.py$|\.pl$|\.cmake$|\.md$|\.rst$|\.groovy$'; then
        echo "Processing line endings in $file"
        sed -i -e 's/[[:space:]]*$//' "$file" # Remove whitespace at end of lines
        sed -i -e '$a\' "$file" # Add missing newline to end of file
    fi
done

# If clang-format exists, run it on C/C++ files
if command -v clang-format >/dev/null; then
    for file in $files; do
       if [[ -e $file ]] && echo $file | grep -Eq '\.c$|\.h$|\.hpp$|\.cpp$|\.cl$|\.h\.in$|\.hpp\.in$|\.cpp\.in$'; then
            echo "clang-format $file"
            clang-format -i -style=file "$file"
        fi
    done
fi
