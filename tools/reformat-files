#!/usr/bin/env bash
#
# Reformats a given list of files to match the rocSOLVER style guidelines.

export PATH=/opt/rocm/llvm/bin:/opt/rocm/bin:/usr/bin:/bin

# Redirect stdout to stderr.
exec >&2

# Change the copyright date at the top of any text files
for file in "$@"; do
    if [[ -e $file ]]; then
        /usr/bin/perl -pi -e 'INIT { exit 1 if !-f $ARGV[0] || -B $ARGV[0]; $year = (localtime)[5] + 1900 }
            s/^([*\/#[:space:]]*)Copyright\s+(?:\(C\)\s*)?(\d+)(?:\s*-\s*\d+)?/qq($1Copyright (c) $2@{[$year != $2 ? "-$year" : ""]})/ie
            if $. < 10' "$file"
    fi
done

# Do the formatting
for file in "$@"; do
    if [[ -e $file ]] && echo "$file" | grep -Eq '\.c$|\.h$|\.hpp$|\.cpp$|\.cl$|\.in$|\.txt$|\.yaml$|\.sh$|\.py$|\.pl$|\.cmake$|\.md$|\.rst$|\.groovy$'; then
        sed -i -e 's/[[:space:]]*$//' "$file" # Remove whitespace at end of lines
        sed -i -e '$a\' "$file" # Add missing newline to end of file

        # Convert UTF8 non-ASCII to ASCII
        temp=$(mktemp)
        [[ -w $temp ]] || exit
        iconv -s -f utf-8 -t ascii//TRANSLIT "$file" > "$temp" || exit
        chmod --reference="$file" "$temp" || exit
        mv -f "$temp" "$file" || exit
    fi
done

# If clang-format exists, run it on C/C++ files
if command -v clang-format >/dev/null; then
    for file in "$@"; do
       if [[ -e $file ]] && echo "$file" | grep -Eq '\.c$|\.h$|\.hpp$|\.cpp$|\.cl$|\.h\.in$|\.hpp\.in$|\.cpp\.in$'; then
            clang-format -i -style=file "$file"
        fi
    done
fi
